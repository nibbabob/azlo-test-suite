name: Release and Build

# This workflow runs on every push to the main branch
on:
  push:
    branches: [ main ]

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      # 1. Check out the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Set up the Go environment
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      # 3. Cache Go modules to speed up future builds
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # 4. Ensure all dependencies are correct and downloaded
      - name: Install Dependencies
        run: go mod tidy

      # 5. Run tests to ensure stability
      - name: Run Go Tests
        run: go test -v ./...

      # 6. Create a new version tag (e.g., v1.0.1)
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          
      # 7. Build the application for multiple platforms
      - name: Build Application
        run: |
          go build -o azlo-dashboard-linux-amd64 ./test-dashboard
          go build -o azlo-dashboard-windows-amd64.exe ./test-dashboard
          go build -o azlo-dashboard-darwin-amd64 ./test-dashboard

      # 8. Create a GitHub Release
      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      # 9. Upload all build artifacts to the release
      - name: Upload Build Artifacts
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ./azlo-dashboard-*
          asset_name: azlo-dashboard-${{ matrix.os }}-${{ matrix.arch }}
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}